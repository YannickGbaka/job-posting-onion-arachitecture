// Environment variables imported from .env file
import * as dotenv from 'dotenv';
import { IDefines, IEnvironment } from './interface'

dotenv.config();

const env:IEnvironment = {
	appName: process.env.APP_NAME || 'Coddyger Typescript API',
	mode: process.env.ENV || 'dev',
	domain: process.env.DOMAIN,
	description: process.env.DESCRIPTION || '',
	server: {
		port: process.env.SERVER_PORT || 3000,
		apiVersion: process.env.API_VERSION || 'v1',
		serverPath: process.env.SERVER_PATH || '/coddyger',
		origins: process.env.ORIGINS ?? '*',
	},
	database: {
		useDatabase: process.env.USE_DB || 'no',
		connectionString: process.env.DB_URI,
		dialect: process.env.DB_DIALECT,
		storage: process.env.DB_STORAGE
	},
	transporter: {
		broker: process.env.TR_BROKER! || process.env.KAFKA_BROKER!,
		client: process.env.TR_CLIENT! || process.env.KAFKA_CLIENT!,
		topic: process.env.TR_TOPIC! || process.env.KAFKA_TOPIC!,
		group: process.env.TR_GROUP! || process.env.KAFKA_GROUP!,
		foreigners: process.env.TR_FOREIGNERS! || process.env.KAFKA_FOREIGNERS!
	},
	jwt: {
		secret: process.env.JWT_SECRET,
		secretAuth: process.env.JWT_AUTH_SECRET,
		public: process.env.JWT_PUBLIC,
		expire: process.env.JWT_EXPIRE || '1h',
		expireRefresh: process.env.JWT_REFRESH_EXPIRE || '24h'
	},
	paths: {
		logger: process.env.LOGGER_PATH
	}
};

export const mails = {
	support: process.env.SUPPORT_MAIL || 'grebejordan@gmail.com',
	logReport: process.env.SUPPORT_MAIL || 'grebejordan@gmail.com'
};

export const defines:IDefines = {
	status: {
		requestOK: 200,
		created: 201,
		noContent: 204,
		badRequest: 400,
		authError: 401,
		forbidden: 403,
		notFound: 404,
		notAllowed: 405,
		clientError: 422,
		tooMany: 429,
		serverError: 500
	},
	message: {
		tryCatch: "Une erreur imprévue s'est produite. Veuillez réessayer. Si le problème persiste, veuillez contacter le service client.",
		badRequest: 'Votre requête contient une ou plusieurs erreurs',
		notFound: 'Route introuvable ou inexistante' 
	},
	tryCatchObject: (data: any) => {
		return {
			data,
			error: true,
			message: "Une erreur imprévue s'est produite. Veuillez réessayer. Si le problème persiste, veuillez contacter le service client."
		};
	},
	controlerTryCatchObject: {
		status: 500,
		message: "Une erreur imprévue s'est produite. Veuillez réessayer. Si le problème persiste, veuillez contacter le service client."
	}
};

export default env
