"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const globals_1 = require("../globals");
class Controller {
    constructor(dao) {
        this.dao = new dao();
    }
    save(item) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const q = yield this.dao.save(item);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: q };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    saveMany(items) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const q = yield this.dao.saveMany(items);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: q };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    update(params, item) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const q = yield this.dao.update(params, item);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: q };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    updateMany(params, item) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const q = yield this.dao.updateMany(params, item);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: q };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    select(params) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                let q = yield this.dao.select(params);
                const rows = q.rows;
                delete q.rows;
                return { status: globals_1.defines.status.requestOK, message: q, data: rows || [] };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: [] };
            }
        });
    }
    selectOne(params, fields) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const q = yield this.dao.selectOne(params, fields);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: q };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    selectLatest(status) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const q = yield this.dao.selectLatest(status);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: q };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    count(params) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const q = yield this.dao.count(params);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: q };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    selectHug(params) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const q = yield this.dao.selectHug(params);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: q };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    remove(params) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.dao.remove(params);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: null };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
    removeMany(params) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.dao.removeMany(params);
                return { status: globals_1.defines.status.requestOK, message: "Success", data: null };
            }
            catch (error) {
                return { status: globals_1.defines.status.serverError, message: error.message, data: null };
            }
        });
    }
}
exports.default = Controller;
