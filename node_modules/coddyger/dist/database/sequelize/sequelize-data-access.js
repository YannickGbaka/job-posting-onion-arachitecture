"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SequelizeDataAccess = void 0;
const sequelize_1 = require("sequelize");
const globals_1 = __importDefault(require("../../globals"));
const coddyger_1 = __importDefault(require("../../coddyger"));
class SequelizeDataAccess {
    constructor() {
        // Récupérez la chaîne de connexion à partir de la configuration
        const connectionString = globals_1.default.database.connectionString;
        // Configuration pour le dialecte de la base de données (MySQL, PostgreSQL, etc.)
        const options = {
            dialect: globals_1.default.database.dialect,
            storage: globals_1.default.database.storage,
            logging: false // Vous pouvez activer ou désactiver les journaux de requêtes selon vos besoins.
        };
        this.sequelize = new sequelize_1.Sequelize(connectionString, options);
    }
    connect() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.sequelize.authenticate();
                coddyger_1.default.konsole('SQL connecté');
            }
            catch (err) {
                coddyger_1.default.konsole('SQL error', 1);
                console.log(err);
            }
        });
    }
}
exports.SequelizeDataAccess = SequelizeDataAccess;
